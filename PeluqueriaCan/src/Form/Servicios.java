/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Form;

import Clases.dbObjetos;
import java.math.BigDecimal;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Atermiter-X99
 */
public class Servicios extends javax.swing.JInternalFrame {

    private frmMenuPrincipal menuPrincipal;
    ResultSet rs = null;
    dbObjetos cSql = new dbObjetos();
    boolean Nuevo = false, Editar = false;
    int IdServicio;
    String Nombre;
    double Precio;

    /**
     * Creates new form Servicios
     */
    public Servicios(frmMenuPrincipal menuPrincipal) {
        initComponents();
        this.menuPrincipal = menuPrincipal;
        cargarServicio();
        ActivarControles(false); // Deshabilitar los campos de texto al iniciar
    }

    private void ActivarControles(boolean v) {
        txtIdServicio.setEditable(v);
        txtNombre.setEditable(v);
        txtPrecio.setEditable(v);
        btnEliminar.setEnabled(!v);
        btnBuscar.setEnabled(!v);
        btnSalir.setEnabled(!v);
    }

    private void LimpiarDatos(boolean v) {
        txtIdServicio.setEditable(v);
        txtNombre.setEditable(v);
        txtPrecio.setEditable(v);
        btnEliminar.setEnabled(!v);
        btnBuscar.setEnabled(!v);
        btnSalir.setEnabled(!v);
    }

    private void limpiarCampos() {
        txtIdServicio.setText("");
        txtNombre.setText("");
        txtPrecio.setText("");

    }

    /**
     * Creates new form Servicios
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbServicio = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIdServicio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();

        btnNuevo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/NUEVO.png"))); // NOI18N
        btnNuevo.setText("NUEVO");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/boton-eliminar.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salida.png"))); // NOI18N
        btnSalir.setText("CERRAR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Servicios"));

        tbServicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "IdServicio", "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbServicio);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Agregar Servicios"));

        jLabel1.setText("IDServicio");

        jLabel2.setText("Nombre");

        jLabel3.setText("Precio");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(txtIdServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(259, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(233, 233, 233))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnBuscar)
                        .addGap(8, 8, 8)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 963, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        try {
            if (btnNuevo.getText().equals("Nuevo")) {
                btnLimpiarActionPerformed(evt);
                ActivarControles(true); // Habilitar todos los campos al iniciar un nuevo registro
                txtNombre.requestFocus();
                Nuevo = true;
                Editar = false;
                btnNuevo.setText("Guardar");
                btnEditar.setText("Cancelar");
            } else {  //Guardar - Nuevo o Modificar
                String confirmMessage;
                if (Nuevo) {
                    confirmMessage = "¿Estás seguro de agregar el servicio?";
                } else {
                    confirmMessage = "¿Estás seguro de editar el servicio?";
                }
                Object[] options = {"SI", "NO"};
                int option = JOptionPane.showOptionDialog(null, confirmMessage, "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                if (option != JOptionPane.YES_OPTION) {
                    return; // Si el usuario elige "NO", se sale del método sin realizar ninguna acción.
                }
                Nombre = txtNombre.getText();
                Precio = Double.parseDouble(txtPrecio.getText());

                if (Nuevo) {
                    int resp = cSql.AgregarServicio(Nombre, Precio);
                    if (resp > 0) {
                        JOptionPane.showMessageDialog(null, "El servicio se creó de forma exitosa! Id=" + resp);
                        cargarServicio();
                    } else {
                        JOptionPane.showMessageDialog(null, "El servicio no se pudo crear!");
                    }
                } else {//Modificaciones
                    IdServicio = Integer.parseInt(txtIdServicio.getText());
                    int resp = cSql.ModificarServicio(IdServicio, Nombre, Precio);
                    if (resp > 0) {
                        JOptionPane.showMessageDialog(null, "El servicio se modificó de forma exitosa!");
                        cargarServicio();
                    } else {
                        JOptionPane.showMessageDialog(null, "El servicio no se pudo modificar!");
                    }
                }

                btnNuevo.setText("Nuevo");
                btnEditar.setText("Editar");
                ActivarControles(true);
                Nuevo = false;
                Editar = false;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:

        try {
            if (btnEditar.getText().equals("Editar")) {
                ActivarControles(true);
                txtNombre.requestFocus();
                Nuevo = false;
                Editar = true;
                btnNuevo.setText("Guardar");
                btnEditar.setText("Cancelar");
            } else {  //Guardar - Nuevo o Modificar
                btnNuevo.setText("Nuevo");
                btnEditar.setText("Editar");
                ActivarControles(false);
                Nuevo = false;
                Editar = false;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
         // TODO add your handling code here:
        try {
            // Verificar si se ha seleccionado un empleado para eliminar
            if (!txtIdServicio.getText().isEmpty()) {
                // Mostrar mensaje de confirmación
                Object[] options = {"Si", "No"};
                int option = JOptionPane.showOptionDialog(null, "¿Estás seguro de eliminar el Servicio?", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                if (option == JOptionPane.YES_OPTION) {
                    IdServicio = Integer.parseInt(txtIdServicio.getText());
                    int resp = cSql.EliminarCliente(IdServicio);
                    if (resp > 0) {
                        JOptionPane.showMessageDialog(null, "El Servicio se eliminó de forma exitosa!");
                        cargarServicio();
                        limpiarCampos();
                    } else {
                        JOptionPane.showMessageDialog(null, "El Servicio no se pudo eliminar!");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ningún Servicio para eliminar.");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtIdServicio.setText(null);
        txtNombre.setText(null);
        txtPrecio.setText(null);


    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
        // Hacer frmMenuPrincipal visible
        if (menuPrincipal != null) {
            menuPrincipal.setVisible(true);
        }
    }//GEN-LAST:event_btnSalirActionPerformed
 
    private void cargarDatosServicio(ResultSet rs) throws SQLException {
        txtIdServicio.setText(String.valueOf(rs.getInt("IdCliente")));
        txtNombre.setText(rs.getString("Nombre"));
        txtPrecio.setText(rs.getString("Precio"));
        
    }
    
    
    private void buscarPorCampos() throws SQLException {
        int idServicio = txtIdServicio.getText().trim().isEmpty() ? 0 : Integer.parseInt(txtIdServicio.getText().trim());
        String nombre = txtNombre.getText().trim();
         Precio = Integer.parseInt(txtPrecio.getText().trim());


        ResultSet rs = cSql.BuscarServicio(IdServicio, nombre, Precio);
        if (rs.next()) {
            cargarDatosServicio(rs);
            ActivarControles(false);
            btnNuevo.setEnabled(true);
            btnEditar.setEnabled(true);
            btnSalir.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró ningún cliente con los criterios de búsqueda proporcionados.");
        }
    }
  private void cargarServicio() {
        DefaultTableModel modelotabla = (DefaultTableModel) tbServicio.getModel();
        modelotabla.setRowCount(0);

        try {
            dbObjetos db = new dbObjetos();
            ResultSet rs = db.Servicios(); // Llama al método que consulta los clientes

            // Se itera sobre los resultados y se agregan al modelo de la tabla
            while (rs.next()) {
                Object[] fila = new Object[modelotabla.getColumnCount()];

                for (int indice = 0; indice < fila.length; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }
                modelotabla.addRow(fila);
            }

            // Agregar el ListSelectionListener después de cargar los datos
            tbServicio.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    if (!e.getValueIsAdjusting()) {
                        int selectedRow = tbServicio.getSelectedRow();
                        if (selectedRow != -1) { // Si se ha seleccionado alguna fila
                            // Obtener los datos de la fila seleccionada
                            int idCliente = (int) tbServicio.getValueAt(selectedRow, 0);
                            String nombre = (String) tbServicio.getValueAt(selectedRow, 1);
                           BigDecimal precio = (BigDecimal) tbServicio.getValueAt(selectedRow, 2);
                            

                            // Mostrar los datos en los campos de texto correspondientes
                            txtIdServicio.setText(String.valueOf(idCliente));
                            txtNombre.setText(nombre);
                            txtPrecio.setText(precio.toString());;
                           
                        }
                    }
                }
            });
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }

    }
 
 
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
          try {
            String idServicioText = txtIdServicio.getText().trim();
            if (!idServicioText.isEmpty()) {
                int IdServicio = Integer.parseInt(idServicioText);
                String nombre = txtNombre.getText().trim();
                int Precio = Integer.parseInt(txtPrecio.getText().trim());
                

                ResultSet rs = cSql.BuscarServicio(IdServicio, nombre, Precio);
                if (rs.next()) {
                    cargarDatosServicio(rs);
                    ActivarControles(false);
                    btnNuevo.setEnabled(true);
                    btnEditar.setEnabled(true);
                    btnSalir.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontró ningún Servicio con los criterios de búsqueda proporcionados.");
                }
            } else {
                ActivarControles(true);
                btnNuevo.setEnabled(true);
                btnEditar.setEnabled(false);
                btnBuscar.setEnabled(true);
                btnSalir.setEnabled(true);
                limpiarCampos();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbServicio;
    private javax.swing.JTextField txtIdServicio;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
