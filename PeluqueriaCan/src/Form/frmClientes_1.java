/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Form;

import Clases.dbObjetos;
import javax.swing.JFileChooser;
import java.io.File;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import javax.swing.JFileChooser;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Atermiter-X99
 */
public class frmClientes_1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmClientes
     */
    private frmMenuPrincipal menuPrincipal;
    ResultSet rs = null;
    dbObjetos cSql = new dbObjetos();
    boolean Nuevo = false, Editar = false;
    int IdCliente;
    String Nombre, Raza, Color, NombreDueno, Telefono, Direccion, DUI;
    boolean Alergico, AtencionEsp;

    public frmClientes_1(frmMenuPrincipal menuPrincipal) {
        initComponents();
        this.menuPrincipal = menuPrincipal;
        cargarClientes();
        ActivarControles(false); // Deshabilitar los campos de texto al iniciar
    }

    private void ActivarControles(boolean v) {
        txtIdCliente.setEditable(v);
        txtNombre.setEditable(v);
        txtRaza.setEditable(v);
        txtColor.setEditable(v);
        txtDueno.setEditable(v);
        txtCelular.setEditable(v);
        btnEliminar.setEnabled(!v);
        btnBuscar.setEnabled(!v);
        btnSalir.setEnabled(!v);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtDireccion = new javax.swing.JTextArea();
        txtCelular = new javax.swing.JTextField();
        txtDueno = new javax.swing.JTextField();
        cbAtencionEspecial = new javax.swing.JComboBox<>();
        cbAlergico = new javax.swing.JComboBox<>();
        txtColor = new javax.swing.JTextField();
        txtRaza = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtIdCliente = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbClientes = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        lblDUI = new javax.swing.JLabel();
        txtDUI = new javax.swing.JTextField();
        btnExcel = new javax.swing.JButton();

        txtDireccion.setColumns(20);
        txtDireccion.setRows(5);
        jScrollPane1.setViewportView(txtDireccion);

        txtDueno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDuenoActionPerformed(evt);
            }
        });

        cbAtencionEspecial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SI", "NO" }));

        cbAlergico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SI", "NO" }));

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/NUEVO.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/boton-eliminar.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salida.png"))); // NOI18N
        btnSalir.setText("CERRAR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel1.setText("IDICLIENTE");

        jLabel2.setText("NOMBRE MASCOTA");

        jLabel3.setText("RAZA");

        jLabel4.setText("COLOR");

        jLabel5.setText("ALERGICO");

        jLabel6.setText("ATENCION ESPECIAL");

        jLabel7.setText("NOMBRE DUEÃ‘O");

        jLabel8.setText("CELULAR");

        jLabel9.setText("Direccion");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buscar.png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes"));

        tbClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdCliente", "Nombre", "Raza", "Color", "Alergico", "AtencionEsp", "NombreDueno", "Telefono", "Direccion", "DUI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbClientes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel11.setText("MANTENIMIENTO CLIENTE");

        lblDUI.setText("DUI");

        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/excel.png"))); // NOI18N
        btnExcel.setText("Excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(lblDUI)))
                            .addComponent(jLabel2))
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbAlergico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbAtencionEspecial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1)
                            .addComponent(txtCelular)
                            .addComponent(txtDueno)
                            .addComponent(txtColor)
                            .addComponent(txtRaza)
                            .addComponent(txtNombre)
                            .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDUI, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 539, Short.MAX_VALUE)
                        .addComponent(btnBuscar)
                        .addGap(47, 47, 47))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(359, 359, 359)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(525, 525, 525)
                .addComponent(btnLimpiar)
                .addGap(70, 70, 70)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExcel)
                .addGap(18, 18, 18)
                .addComponent(btnSalir)
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel11)
                .addGap(46, 46, 46)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(jLabel1))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(jLabel2))
                                                                .addGap(17, 17, 17)
                                                                .addComponent(txtRaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(jLabel3))
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jLabel4))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cbAlergico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbAtencionEspecial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(txtDueno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel9))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEditar)
                            .addComponent(btnEliminar)
                            .addComponent(btnLimpiar)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSalir)
                            .addComponent(btnExcel)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDUI))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDuenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDuenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDuenoActionPerformed
    private void cargarClientes() {
        DefaultTableModel modelotabla = (DefaultTableModel) tbClientes.getModel();
        modelotabla.setRowCount(0);

        try {
            dbObjetos db = new dbObjetos();
            ResultSet rs = db.Clientes(); // Llama al mÃ©todo que consulta los clientes

            // Se itera sobre los resultados y se agregan al modelo de la tabla
            while (rs.next()) {
                Object[] fila = new Object[modelotabla.getColumnCount()];

                for (int indice = 0; indice < fila.length; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }
                modelotabla.addRow(fila);
            }

            // Agregar el ListSelectionListener despuÃ©s de cargar los datos
            tbClientes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    if (!e.getValueIsAdjusting()) {
                        int selectedRow = tbClientes.getSelectedRow();
                        if (selectedRow != -1) { // Si se ha seleccionado alguna fila
                            // Obtener los datos de la fila seleccionada
                            int idCliente = (int) tbClientes.getValueAt(selectedRow, 0);
                            String nombre = (String) tbClientes.getValueAt(selectedRow, 1);
                            String raza = (String) tbClientes.getValueAt(selectedRow, 2);
                            String color = (String) tbClientes.getValueAt(selectedRow, 3);
                            boolean alergico = (boolean) tbClientes.getValueAt(selectedRow, 4);
                            boolean atencionEsp = (boolean) tbClientes.getValueAt(selectedRow, 5);
                            String nombreDueno = (String) tbClientes.getValueAt(selectedRow, 6);
                            String telefono = (String) tbClientes.getValueAt(selectedRow, 7);
                            String direccion = (String) tbClientes.getValueAt(selectedRow, 8);
                            String dui = (String) tbClientes.getValueAt(selectedRow, 9);

                            // Mostrar los datos en los campos de texto correspondientes
                            txtIdCliente.setText(String.valueOf(idCliente));
                            txtNombre.setText(nombre);
                            txtRaza.setText(raza);
                            txtColor.setText(color);
                            cbAlergico.setSelectedItem(alergico ? "SI" : "NO");
                            cbAtencionEspecial.setSelectedItem(atencionEsp ? "SI" : "NO");
                            txtDueno.setText(nombreDueno);
                            txtCelular.setText(telefono);
                            txtDireccion.setText(direccion);
                            txtDUI.setText(dui);
                        }
                    }
                }
            });
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }

    }

    private void LimpiarDatos(boolean v) {
        txtIdCliente.setEditable(v);
        txtNombre.setEditable(v);
        txtRaza.setEditable(v);
        txtColor.setEditable(v);
        txtDueno.setEditable(v);
        txtCelular.setEditable(v);
        txtDireccion.setEditable(v);
        txtDUI.setEditable(v);
        cbAlergico.setEnabled(v);
        cbAtencionEspecial.setEnabled(v);
        btnEliminar.setEnabled(!v);
        btnBuscar.setEnabled(!v);
        btnSalir.setEnabled(!v);
    }

    private void limpiarCampos() {
        txtIdCliente.setText("");
        txtNombre.setText("");
        txtRaza.setText("");
        txtColor.setText("");
        txtDueno.setText("");
        txtCelular.setText("");
        txtDireccion.setText("");
        txtDUI.setText("");
        cbAlergico.setSelectedIndex(-1);
        cbAtencionEspecial.setSelectedIndex(-1);
    }

    private void cargarDatosCliente(ResultSet rs) throws SQLException {
        txtIdCliente.setText(String.valueOf(rs.getInt("IdCliente")));
        txtNombre.setText(rs.getString("Nombre"));
        txtRaza.setText(rs.getString("Raza"));
        txtColor.setText(rs.getString("Color"));
        cbAlergico.setSelectedItem(rs.getBoolean("Alergico") ? "SI" : "NO");
        cbAtencionEspecial.setSelectedItem(rs.getBoolean("AtencionEsp") ? "SI" : "NO");
        txtDueno.setText(rs.getString("NombreDueno"));
        txtCelular.setText(rs.getString("Telefono"));
        txtDireccion.setText(rs.getString("Direccion"));
        txtDUI.setText(rs.getString("DUI"));
    }

    private void buscarPorCampos() throws SQLException {
        int idCliente = txtIdCliente.getText().trim().isEmpty() ? 0 : Integer.parseInt(txtIdCliente.getText().trim());
        String nombre = txtNombre.getText().trim();
        String raza = txtRaza.getText().trim();
        String color = txtColor.getText().trim();
        String nombreDueno = txtDueno.getText().trim();
        String dui = txtDUI.getText().trim();

        ResultSet rs = cSql.BuscarCliente(idCliente, nombre, raza, color, nombreDueno, dui);
        if (rs.next()) {
            cargarDatosCliente(rs);
            ActivarControles(false);
            btnNuevo.setEnabled(true);
            btnEditar.setEnabled(true);
            btnSalir.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontrÃ³ ningÃºn cliente con los criterios de bÃºsqueda proporcionados.");
        }
    }
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            String idClienteText = txtIdCliente.getText().trim();
            if (!idClienteText.isEmpty()) {
                int idCliente = Integer.parseInt(idClienteText);
                String nombre = txtNombre.getText().trim();
                String raza = txtRaza.getText().trim();
                String color = txtColor.getText().trim();
                String nombreDueno = txtDueno.getText().trim();
                String dui = txtDUI.getText().trim();

                ResultSet rs = cSql.BuscarCliente(idCliente, nombre, raza, color, nombreDueno, dui);
                if (rs.next()) {
                    cargarDatosCliente(rs);
                    ActivarControles(false);
                    btnNuevo.setEnabled(true);
                    btnEditar.setEnabled(true);
                    btnSalir.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontrÃ³ ningÃºn cliente con los criterios de bÃºsqueda proporcionados.");
                }
            } else {
                ActivarControles(true);
                btnNuevo.setEnabled(true);
                btnEditar.setEnabled(false);
                btnBuscar.setEnabled(true);
                btnSalir.setEnabled(true);
                limpiarCampos();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
        // Hacer frmMenuPrincipal visible
        if (menuPrincipal != null) {
            menuPrincipal.setVisible(true);
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        txtIdCliente.setText(null);
        txtNombre.setText(null);
        txtRaza.setText(null);
        txtColor.setText(null);
        txtDueno.setText(null);
        txtCelular.setText(null);
        txtDireccion.setText(null);
        cbAlergico.setSelectedItem(null);
        cbAtencionEspecial.setSelectedItem(null);
        txtDUI.setText(null);

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        try {
            // Verificar si se ha seleccionado un empleado para eliminar
            if (!txtIdCliente.getText().isEmpty()) {
                // Mostrar mensaje de confirmaciÃ³n
                Object[] options = {"Si", "No"};
                int option = JOptionPane.showOptionDialog(null, "Â¿EstÃ¡s seguro de eliminar el registro?", "ConfirmaciÃ³n", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                if (option == JOptionPane.YES_OPTION) {
                    IdCliente = Integer.parseInt(txtIdCliente.getText());
                    int resp = cSql.EliminarCliente(IdCliente);
                    if (resp > 0) {
                        JOptionPane.showMessageDialog(null, "El registro se eliminÃ³ de forma exitosa!");
                        cargarClientes();
                    } else {
                        JOptionPane.showMessageDialog(null, "El registro no se pudo eliminar!");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ningÃºn empleado para eliminar.");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        try {
            if (btnEditar.getText().equals("Editar")) {
                ActivarControles(true);
                txtNombre.requestFocus();
                Nuevo = false;
                Editar = true;
                btnNuevo.setText("Guardar");
                btnEditar.setText("Cancelar");
            } else {  //Guardar - Nuevo o Modificar
                btnNuevo.setText("Nuevo");
                btnEditar.setText("Editar");
                ActivarControles(false);
                Nuevo = false;
                Editar = false;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        try {
            if (btnNuevo.getText().equals("Nuevo")) {
                btnLimpiarActionPerformed(evt);
                ActivarControles(true); // Habilitar todos los campos al iniciar un nuevo registro
                txtNombre.requestFocus();
                Nuevo = true;
                Editar = false;
                btnNuevo.setText("Guardar");
                btnEditar.setText("Cancelar");
            } else {  //Guardar - Nuevo o Modificar
                String confirmMessage;
                if (Nuevo) {
                    confirmMessage = "Â¿EstÃ¡s seguro de agregar el empleado?";
                } else {
                    confirmMessage = "Â¿EstÃ¡s seguro de editar el registro?";
                }

                Object[] options = {"SI", "NO"};
                int option = JOptionPane.showOptionDialog(null, confirmMessage, "ConfirmaciÃ³n", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                if (option != JOptionPane.YES_OPTION) {
                    return; // Si el usuario elige "NO", se sale del mÃ©todo sin realizar ninguna acciÃ³n.
                }

                Nombre = txtNombre.getText();
                Raza = txtRaza.getText();
                Color = txtColor.getText();
                boolean isAlergico = cbAlergico.getSelectedItem().toString().equals("SI");
                boolean isAtencionEsp = cbAtencionEspecial.getSelectedItem().toString().equals("SI");
                NombreDueno = txtDueno.getText();
                Telefono = txtCelular.getText();
                Direccion = txtDireccion.getText();
                DUI = txtDUI.getText();

                if (Nuevo) {
                    int resp = cSql.NuevoCliente(Nombre, Raza, Color, isAlergico, isAtencionEsp, NombreDueno, Telefono, Direccion, DUI);
                    if (resp > 0) {
                        JOptionPane.showMessageDialog(null, "El cliente se creÃ³ de forma exitosa! Id=" + resp);
                        cargarClientes();
                    } else {
                        JOptionPane.showMessageDialog(null, "El cliente no se pudo crear!");
                    }
                } else {//Modificaciones
                    IdCliente = Integer.parseInt(txtIdCliente.getText());
                    int resp = cSql.ModificarCliente(IdCliente, Nombre, Raza, Color, isAlergico, isAtencionEsp, NombreDueno, Telefono, Direccion, DUI);
                    if (resp > 0) {
                        JOptionPane.showMessageDialog(null, "El registro se modificÃ³ de forma exitosa!");
                        cargarClientes();
                    } else {
                        JOptionPane.showMessageDialog(null, "El registro no se pudo modificar!");
                    }
                }

                btnNuevo.setText("Nuevo");
                btnEditar.setText("Editar");
                ActivarControles(true);
                Nuevo = false;
                Editar = false;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
         JFileChooser fileChooser = new JFileChooser();
    int opcion = fileChooser.showSaveDialog(this);
    if (opcion == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        String nombreArchivo = file.getAbsolutePath();
        
        // Validar si se ingresÃ³ un nombre de archivo
        if (nombreArchivo.endsWith("")) {
            try {
                ExcelUtils.exportarTablaAExcel(tbClientes, nombreArchivo);
                JOptionPane.showMessageDialog(this, "El archivo de Excel se guardÃ³ correctamente.", "Exportar a Excel", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al exportar a Excel: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } 
    }
    }//GEN-LAST:event_btnExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cbAlergico;
    private javax.swing.JComboBox<String> cbAtencionEspecial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDUI;
    private javax.swing.JTable tbClientes;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtDUI;
    private javax.swing.JTextArea txtDireccion;
    private javax.swing.JTextField txtDueno;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRaza;
    // End of variables declaration//GEN-END:variables
}
